<?php

namespace WebsiteBundle\Repository;

use Doctrine\ORM\EntityRepository;
use Doctrine\ORM\QueryBuilder;

/**
 * AdvertRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class AdvertRepository extends EntityRepository
{
    public function getAdvertsOld(\Datetime $date) 
    {
        $query = $this->createQueryBuilder('a')
            ->leftJoin('a.image', 'i')
            ->addSelect('i')
            ->leftJoin('a.address', 'ad')
            ->addSelect('ad')
            ->where('a.dateStart < :date')
            ->setParameter('date', $date)
            ->andWhere('a.toComeUp = 0')
            ->orderBy('a.dateStart', 'DESC')
            ->getQuery()
        ;
        
        // On retourn seulement la query car on va paginer dans le controlleur
        return $query;
    }
    
    public function getAdvertsPast(\Datetime $dateLimit, \Datetime $today) 
    {
        $query = $this->createQueryBuilder('a')
            ->leftJoin('a.image', 'i')
            ->addSelect('i')
            ->leftJoin('a.address', 'ad')
            ->addSelect('ad')
            ->where('a.dateEnd < :today OR a.dateEnd IS NULL AND a.dateStart < :today')
            ->setParameter('today', $today)
            ->andwhere('a.dateStart >= :date')
            ->setParameter('date', $dateLimit)
            ->andWhere('a.toComeUp = 0')
            ->orderBy('a.dateStart', 'DESC')
            ->getQuery()
        ;
        
        return $query->getResult();
    }
    
    public function getAdvertsFuture(\Datetime $date) 
    {
        $query = $this->createQueryBuilder('a')
            ->leftJoin('a.image', 'i')
            ->addSelect('i')
            ->leftJoin('a.address', 'ad')
            ->addSelect('ad')
            ->where('a.dateEnd >= :date')
            ->orWhere('a.dateStart >= :date')
            ->setParameter('date', $date)
            ->andWhere('a.toComeUp = 0')
            ->orderBy('a.dateStart', 'ASC')
            ->getQuery()
        ;
        
        return $query->getResult();
    }
    
    public function getAdvertsToComeUp() 
    {
        $query = $this->createQueryBuilder('a')
            ->leftJoin('a.image', 'i')
            ->addSelect('i')
            ->leftJoin('a.address', 'ad')
            ->addSelect('ad')
            ->where('a.toComeUp = 1')
            ->orderBy('a.dateStart', 'ASC')
            ->getQuery()
        ;
        
        return $query->getResult();
    }
    
    public function getAdvertsCategory(\Datetime $date, $category) 
    {
        $query = $this->createQueryBuilder('a')
            ->leftJoin('a.image', 'i')
            ->addSelect('i')
            ->leftJoin('a.address', 'ad')
            ->addSelect('ad')
            ->leftJoin('a.categories', 'c')
            ->addSelect('c')
            ->where('a.dateEnd >= :date')
            ->orWhere('a.dateStart >= :date')
            ->setParameter('date', $date)
            ->andWhere('a.toComeUp = 0')
            ->andWhere('c.name = :category')
            ->setParameter('category', $category)
            ->orderBy('a.dateStart', 'ASC')
            ->getQuery()
        ;
        
        return $query->getResult();
    }
    
    public function getAdvertsCategoryToComeUp($category) 
    {
        $query = $this->createQueryBuilder('a')
            ->leftJoin('a.image', 'i')
            ->addSelect('i')
            ->leftJoin('a.address', 'ad')
            ->addSelect('ad')
            ->leftJoin('a.categories', 'c')
            ->addSelect('c')
            ->where('a.toComeUp = 1')
            ->andWhere('c.name = :category')
            ->setParameter('category', $category)
            ->orderBy('a.dateStart', 'ASC')
            ->getQuery()
        ;
        
        return $query->getResult();
    }
       
}
